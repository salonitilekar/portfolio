---
// Theme toggle component
---

<button
  id="theme-toggle"
  class="focus:outline-none"
  aria-label="Toggle theme"
>
  <!-- Sun icon for light theme -->
  <svg
    id="sun-icon"
    class="w-5 h-5 text-neutral"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
    />
  </svg>
  
  <!-- Moon icon for dark theme -->
  <svg
    id="moon-icon"
    class="w-5 h-5 text-neutral hidden"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
    />
  </svg>
</button>

<script>
  const themeToggle = document.getElementById('theme-toggle');
  const sunIcon = document.getElementById('sun-icon');
  const moonIcon = document.getElementById('moon-icon');
  
  function updateTheme() {
    const theme = document.documentElement.getAttribute('data-theme');
    const isDark = theme === 'dark';
    
    // Update icons
    sunIcon?.classList.toggle('hidden', isDark);
    moonIcon?.classList.toggle('hidden', !isDark);
    
    // Update body classes
    document.body.classList.toggle('dark', isDark);
  }
  
  // Initialize theme
  updateTheme();
  
  // Theme toggle functionality with ripple effect
  themeToggle?.addEventListener('click', (event) => {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    // Get button position for ripple effect
    const rect = themeToggle.getBoundingClientRect();
    const centerX = rect.left + rect.width / 2;
    const centerY = rect.top + rect.height / 2;
    
    // Create ripple element
    const ripple = document.createElement('div');
    ripple.className = 'theme-ripple';
    ripple.style.left = centerX + 'px';
    ripple.style.top = centerY + 'px';
    ripple.style.setProperty('--ripple-color', newTheme === 'dark' ? '#0a0a0a' : '#ffffff');
    ripple.style.border = '2px solid red'; // Debug border
    document.body.appendChild(ripple);
    
    console.log('Ripple created at:', centerX, centerY); // Debug log
    
    // Start the ripple animation
    setTimeout(() => {
      ripple.classList.add('expand');
    }, 10);
    
    // Change theme after a small delay to sync with animation
    setTimeout(() => {
      document.documentElement.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
      updateTheme();
    }, 100);
    
    // Remove ripple element after animation
    setTimeout(() => {
      ripple.remove();
    }, 2000);
  });
</script>

<style>
  .theme-ripple {
    position: fixed;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: var(--ripple-color);
    transform: translate(-50%, -50%);
    z-index: 999999;
    pointer-events: none;
    transition: all 2s cubic-bezier(0.4, 0, 0.2, 1);
    mix-blend-mode: normal;
  }
  
  .theme-ripple.expand {
    width: 300vw;
    height: 300vh;
    transform: translate(-50%, -50%) scale(1);
  }
</style> 